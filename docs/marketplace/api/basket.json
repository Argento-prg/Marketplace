{
  "openapi": "3.0.0",
  "info": {
    "title": "basket",
    "version": "1.0",
    "description": "Взаимодействие с сущностью корзины"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/basket"
    }
  ],
  "paths": {
    "/getall": {
      "get": {
        "summary": "",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "sum": {
                      "type": "number"
                    },
                    "records": {
                      "type": "array",
                      "items": {
                        "$ref": "../models/Basket.json"
                      }
                    }
                  }
                },
                "examples": {}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": [
                        "string",
                        "object"
                      ]
                    },
                    "status": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-getall",
        "description": "Получение всех товаров пользователя в корзине, а также суммы корзины",
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/add": {
      "post": {
        "summary": "",
        "operationId": "post-add",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "status": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": [
                        "string",
                        "object"
                      ]
                    },
                    "status": {
                      "type": "boolean"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": "Товар закончился",
                      "status": false
                    }
                  },
                  "example-2": {
                    "value": {
                      "error": "Товар уже в корзине",
                      "status": false
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bookId": {
                    "type": "integer"
                  }
                },
                "required": [
                  "bookId"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "bookId": 1
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "description": "Добавление новой позиции в корзину"
      }
    },
    "/setquantity": {
      "post": {
        "summary": "",
        "operationId": "post-setquantity",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "status": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": [
                        "string",
                        "object"
                      ]
                    },
                    "status": {
                      "type": "boolean"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": "Достигнуто максимально доступное количество книг",
                      "status": false
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Задание количества определённой позиции товара в корзине",
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "bookId": {
                    "type": "integer"
                  },
                  "quanityCurrent": {
                    "type": "integer"
                  }
                },
                "required": [
                  "id",
                  "bookId",
                  "quanityCurrent"
                ]
              }
            }
          },
          "description": "Получаем id записи в корзине, id книги, текущее количество позиции"
        }
      }
    },
    "/buyall": {
      "post": {
        "summary": "",
        "operationId": "post-buyall",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "status": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": [
                        "string",
                        "object"
                      ]
                    },
                    "status": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Покупка всех позиций пользователя в корзине",
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/del": {
      "post": {
        "summary": "",
        "operationId": "post-del",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "status": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": [
                        "string",
                        "object"
                      ]
                    },
                    "status": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Удаление товара из корзины",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "recordId": {
                    "type": "integer"
                  }
                },
                "required": [
                  "recordId"
                ]
              },
              "examples": {}
            }
          },
          "description": "Получаем id записи в корзине"
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {},
    "securitySchemes": {
      "Authorization": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}